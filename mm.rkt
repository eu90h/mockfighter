#lang racket
(require stockfighter-api math)
(provide mm%)
(define noise-dist (normal-dist 0 150))
(define (gaussian-noise)
  (sample noise-dist))
(define mm%
  (class object% (super-new)
    (init-field api-key venue stock account venue-name)
    (field [sf (new stockfighter% [key api-key])]
           [cur-order (make-hash)]
           [order-alarm null])
    (send sf set-ob-endpoint "127.0.0.1")
    (send sf set-gm-endpoint "127.0.0.1")
    (send sf set-port 8000)
    (send sf ssl-off)
    (define/public (trade)
      (define id (order-id cur-order))
      (define order (if (false? id) (make-hash)
                        (send sf get-order-status venue-name stock id)))
      (define fmv (inexact->exact (truncate (+ (send venue get-fmv stock) (gaussian-noise)))))
      (if (order-open? order)
          (unless (false? (sync/timeout 0 order-alarm)) 
            (begin (send sf cancel-order (order-venue cur-order) (order-symbol cur-order) (order-id cur-order))
            (set! cur-order (send sf post-order account venue-name stock fmv (random-integer 20 100) (if (= 1 (random 2))
                                                                                                         "buy" "sell") "limit"))
            (set! order-alarm (alarm-evt (+ (current-inexact-milliseconds) 500)))))
          (begin (set! cur-order (send sf post-order account venue-name stock fmv (random-integer 20 100) (if (= 1 (random 2))
                                                                                                         "buy" "sell") "limit"))

                 (set! order-alarm (alarm-evt (+ (current-inexact-milliseconds) 500))))))))